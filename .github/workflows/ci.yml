name: CI-Build

on:
  push:
  pull_request:
  schedule:
    - cron:  '21 21 * * *'
  workflow_dispatch:

permissions:
  contents: read
  checks: write
  pull-requests: write


jobs:
  build:
    strategy:
      matrix:
        platform: [2022, 2025]
        include:
          - platform: 2022
            runner: windows-2022
          - platform: 2025
            runner: windows-2025
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run installer (fetching modules)
        shell: pwsh
        run: |
          #Get-WindowsFeature -name web-*
          #& "$env:SystemRoot\System32\inetsrv\appcmd.exe" list modules

          curl -L https://developer.axonivy.com/permalink/nightly/axonivy-engine-windows.zip -o engine.zip
          Expand-Archive -Path 'engine.zip' -DestinationPath 'engine'
          Start-Process -FilePath './engine/bin/AxonIvyEngine.exe' -NoNewWindow
          Write-Information "Calling engine directly"
          $result = curl http://localhost:8080/api/engine/info
          Write-Output $result

          ./scripts/iis-proxy-setup.ps1
          & "$env:SystemRoot\System32\inetsrv\appcmd.exe" list modules
          & "$env:SystemRoot\System32\inetsrv\appcmd.exe" list sites

          function call( [string] $url) {
            Write-Output "Calling $url"
            try {
              $secpasswd = ConvertTo-SecureString 'admin' -AsPlainText -Force
              $cred = New-Object System.Management.Automation.PSCredential ('admin', $secpasswd)
              $response = Invoke-WebRequest -Uri $url -UseBasicParsing -Credential $cred
              Write-Output "Status: $($response.StatusCode)"
              Write-Output $response.Content
            } catch {
              Write-Output "Status: $($_.Exception.Response.StatusCode.value__)"
              Write-Output $_.Exception.Message
            }
          }

          Write-Output "Calling engine directly"
          call http://localhost:8080/api/engine/info

          Write-Output "Calling engine via IIS Proxy"
          call http://localhost/api/engine/info

          Write-Output "Calling engine via IIS Proxy using HTTPS"
          call https://localhost/api/engine/info  
        env:
          AUTO_CONFIRM: 'true'  # say yes to all prompts

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: script-logs-${{ matrix.runner }}
          path: '**/*.log'
